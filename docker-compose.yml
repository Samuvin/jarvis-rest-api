version: '3.8'

services:
  # Jarvis API Service (using MongoDB Atlas, Upstash Redis and Vector)
  api:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: jarvis-api
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: development
      PORT: 3000
      # MongoDB Atlas (replace <db_password> with actual password)
      MONGO_URI: mongodb+srv://admin:<db_password>@cluster0.ajdpuvy.mongodb.net/jarvis-api?retryWrites=true&w=majority&appName=Cluster0
      # Upstash Redis Configuration
      REDIS_URL: redis://default:ASCGAAImcDFlNWNkOTQ0YTEwY2Y0NDYyOTc4ZmM4OWM2ODk4MzQxNHAxODMyNg@stirred-beagle-8326.upstash.io:6379
      UPSTASH_REDIS_REST_URL: https://stirred-beagle-8326.upstash.io
      UPSTASH_REDIS_REST_TOKEN: ASCGAAImcDFlNWNkOTQ0YTEwY2Y0NDYyOTc4ZmM4OWM2ODk4MzQxNHAxODMyNg
      # Upstash Vector Configuration
      UPSTASH_VECTOR_REST_URL: https://still-asp-77731-us1-vector.upstash.io
      UPSTASH_VECTOR_REST_TOKEN: ABMFMHN0aWxsLWFzcC03NzczMS11czFhZG1pblpqY3dPRFJqTkdVdE4ySXlNUzAwTUdNMExXRTFOMkV0WVRZMllUQTNOR00zTlRZMQ==
      # Other Configuration
      HUGGING_FACE_API_KEY: hf_placeholder-key
      JWT_SECRET: jarvis-super-secret-jwt-key-for-local-development-only
      JWT_EXPIRES_IN: 1h
      JWT_REFRESH_EXPIRES_IN: 7d
      OAUTH_CLIENT_ID: jarvis-local-client
      OAUTH_CLIENT_SECRET: jarvis-local-secret
      RATE_LIMIT_WINDOW_MS: 900000
      RATE_LIMIT_MAX_REQUESTS: 100
      RATE_LIMIT_MAX_REQUESTS_PER_USER: 50
      MAX_FILE_SIZE: 10485760
      UPLOAD_DIR: ./uploads
      FEATURE_FLAGS_ENABLED: true
      CELL_ID: cell-1
      LOG_LEVEL: info
      LOG_TO_CONSOLE: true
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
    networks:
      - jarvis-network
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/v1/status', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

networks:
  jarvis-network:
    driver: bridge 